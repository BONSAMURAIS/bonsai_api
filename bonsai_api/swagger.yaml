swagger: '2.0'
info:
  version: 1.0.0
  title: bonsai_api
  description: 'This is a simple API to serve queries to and from the BONSAI database as well as LCA results.  You can find out more about bonsai_api on the [Github page](https://github.com/BONSAMURAIS/bonsai_api).'
  contact:
    email: info@bonsai.uno
host: '127.0.0.1:5000'
schemes:
  - http
basePath: "/v1"
consumes:
  - application/json
produces:
  - application/json
paths:
  /activities/:
    get:
      description: Fetches all available activities from the database
      summary: getActivities
      tags:
        - activities
      operationId: bonsai_api.getActivities
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: lim
          in: query
          required: false
          type: integer
          format: int64
          minimum: 1
          maximum: 1000
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: 'Set an optional length limit to the response between 1 and 1000, defaults to 100 if unspecified.'
        - name: sort
          in: query
          required: false
          enum:
            - uri
            - label
          type: string
          description: 'Define an alphabetical sorting option for the response (e.i., by label or uri), defaults to sorting by label name if unspecified.'
      responses:
        '200':
          description: Activities successfully fetched
          schema:
            type: array
            items:
              $ref: '#/definitions/activityList'
          headers: {}
        '400':
          description: Invalid parameter(s)
          schema: {}
        '404':
          description: Resource cannot be found
          schema: {}
  /activities/by_label/{substring}:
    get:
      description: Fetches one or several activities which label contains the specified substring
      summary: getSearchActivity
      tags:
        - activities
      operationId: bonsai_api.getSearchActivityByLabel
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: substring
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: Activities successfully fetched
          schema:
            type: array
            items:
              $ref: '#/definitions/activityList'
          headers: {}
        '404':
          description: Resource cannot be found
          schema: {}
  /activities/by_uri/{substring}:
    get:
      description: Fetches one or several activities which label contains the specified substring
      summary: getSearchActivityByUri
      tags:
        - activities
      operationId: bonsai_api.getSearchActivityByUri
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: substring
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: Activities successfully fetched
          schema:
            type: array
            items:
              $ref: '#/definitions/activityList'
          headers: {}
        '404':
          description: Resource cannot be found
          schema: {}
  /activities/get_relations/{URI}:
    get:
      description: Returns the ingoing and outgoing flows of a specified activity
      summary: getActivityRelations
      tags:
        - activities
      operationId: bonsai_api.getActivityRelations
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: URI
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: Flows successfully fetched
          schema:
            type: array
            items:
              $ref: '#/definitions/activityRelation'
          headers: {}
        '404':
          description: Resources cannot be found
          schema: {}
  /do_lca/:
    post:
      description: Returns the results of a LCA calculation
      summary: postDoLCA
      tags:
        - lca
      operationId: bonsai_api.postDoLCA
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          description: Returns a list of impacts for a list of one or several functional units
          schema:
            type: object
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/lcaResult'
          headers: {}
definitions:
  activityList:
    title: activityList
    type: object
    properties:
      uri:
        description: URI of the activity
        type: string
      label:
        description: Label of the activity
        type: string
  activityRelation:
    title: activityRelation
    type: object
    properties:
      uri:
        type: string
      label:
        type: string
      isInputOf:
        type: array
        items:
          $ref: '#/definitions/IsInputOf'
      isOutputOf:
        type: array
        items:
          $ref: '#/definitions/IsOutputOf'
  Impacts:
    title: Impacts
    type: object
    properties:
      impact_name:
        description: Name of the impact category
        type: string
      amount:
        description: Amount
        type: number
        format: double
      unit:
        description: Indicator unit
        type: string
  IsInputOf:
    title: IsInputOf
    type: object
    properties:
      uri:
        type: string
      label:
        type: string
  IsOutputOf:
    title: IsOutputOf
    type: object
    properties:
      uri:
        type: string
      label:
        type: string
  lcaResult:
    title: lcaResult
    type: object
    properties:
      uri:
        type: string
      activityType:
        type: string
      label:
        type: string
      algorithm:
        type: string
      impacts:
        $ref: '#/definitions/Impacts'
  sort:
    title: sort
    example: uri
    type: string
    enum:
      - uri
      - label
tags:
  - name: activities
    description: Fetch all or specific activities
    externalDocs:
      url: 'http://swagger.io'
      description: Find out more
  - name: methods
    description: Fetch all or specific methods
    externalDocs:
      url: 'http://swagger.io'
      description: Find out more about our store
  - name: lca
    description: Performs LCA calculations
externalDocs:
  url: 'https://bonsai.uno/'
  description: Find out more about BONSAI
